// (Ayo's note: Please remember you can resize the infobox you're reading this in.)

// Determines where the textbox is positioned. "shift" moves the textbox based on the player's position.
verticalPosition: 'shift', // options are "top", "center", "bottom", or "shift" (moves based on player position)
horizontalPosition: 'center', // options are "left", "center", "right", or "shift" (moves based on player position)

textboxColor: [0, 0, 0, 255], // Colors text and textbox are drawn, in [R,G,B,A]. TODO: Alpha doesn't presently work!
textboxWidth: 120, // Width of textbox in pixels. Default 104.
textboxMarginX: 4, // Pixels of space outside the left (or right) of the textbox. Default 12.
textboxMarginY: 4, // Pixels of space outside the top (or bottom) of the textbox. Default 12.

textColor: [255, 255, 255, 255], // Default color of text.
textMinLines: 2, // Minimum number of rows for text. Determines starting textbox height. Default 2.
textMaxLines: 2, // Maximum number of rows for text. Determines max textbox height. Default 2.
textScale: 2, // Scaling factor for text. Default 2. Best with 1, 2, or 4.
textSpeed: 50, // Time to print each character, in milliseconds. Default 50.
textPaddingX: 0, // Default horizontal padding around the text.
textPaddingY: 2, // Default vertical padding around the text.

// Color the continue arrow is drawn using, in [R,G,B,A]
arrowColor: [255, 255, 255, 255], // Foreground color of arrow sprite.
arrowBGColor: [0, 0, 0, 255], // Background color. If transparent, draws no BG.

// Position of textbox continue arrow, on bottom of textbox.
arrowAlign: 'right', // Options are: "right", "center", or "left" aligned

// Pixels of padding the arrow is inset from the edge by
arrowInsetX: 12,
arrowInsetY: 0,

// Should match dimensions of the sprite below
arrowWidth: 8, // Width of arrow sprite below, in pixels
arrowHeight: 5, // Height of arrow sprite below, in pixels
arrowScale: 2, // Scaling factor for arrow sprite. Default 2. Best with 1, 2, or 4.

// Pixels defining the textbox continue arrow. 1 draws a pixel in main Color, 0 draws in BG Color.
arrowSprite: [
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 1, 1, 1, 1, 1, 1, 0,
	0, 0, 1, 1, 1, 1, 0, 0,
	0, 0, 0, 1, 1, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
],
// Colors the borders are drawn using, in [R,G,B,A].
borderColor: [128, 128, 128, 255], // Foreground color for border tiles.
borderMidColor: [51, 51, 51, 255], // Foreground color used for middle border tiles.
borderBGColor: [0, 0, 0, 255], // Background color the border tiles. If transparent, draws no BG.

// Border is drawn past the edges of the textbox.
// Should match dimensions of the sprite below
borderWidth: 8, // Width of border sprites, in pixels. Default 8.
borderHeight: 8, // Height of border sprites, in pixels. Default 8.
borderScale: 2, // Scaling factor for border sprites. Default 2. Best with 1, 2, or 4.

// Pixels defining the corners and edges the border is drawn with. 1 draws a pixel in foreground color, 0 in BG.
borderUL: [
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
],
borderU: [
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
],
borderUR: [
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
],
borderL: [
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
],
borderR: [
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
],
borderDL: [
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 0, 0, 0, 0,
	0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
],
borderD: [
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	1, 1, 1, 1, 1, 1, 1, 1,
	1, 1, 1, 1, 1, 1, 1, 1,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
],
borderDR: [
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	0, 0, 0, 0, 1, 1, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0,
	1, 1, 1, 1, 1, 1, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
],
borderM: [
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
	0, 0, 0, 0, 0, 0, 0, 0,
],

dialogStyles: {
	// You can define alternate Dialog Styles here, which can be switched to in-game from dialog.
	// These can be switched between using the (Style "styleName") or (ApplyStyle "styleName") commands.
	// These Dialog Styles are meant as examples. Feel free to edit, rename, or remove them.
	custom: {
		// Copy any hackOptions from above into this section, and modify them, to create a new Style.
	},
	vanilla: {
		// An example style, which emulates the original Bitsy textbox.
		verticalPosition: 'shift',
		horizontalPosition: 'center',
		textboxWidth: 104,
		textboxMarginX: 12,
		textboxMarginY: 12,
		textMinLines: 2,
		textMaxLines: 2,
		textPaddingX: 8,
		textPaddingY: 10,
		borderWidth: 0,
		borderHeight: 0,
		arrowScale: 4,
		arrowInsetX: 4,
		arrowInsetY: 1,
		arrowWidth: 5,
		arrowHeight: 3,
		arrowSprite: [
			1, 1, 1, 1, 1,
			0, 1, 1, 1, 0,
			0, 0, 1, 0, 0,
		],
	},
	centered: {
		// An example style, that centers the textbox as with Starting or Ending text.
		verticalPosition: 'center',
		horizontalPosition: 'center',
	},
	vertical: {
		// An example style, that positions the textbox vertically, on the left or right side.
		verticalPosition: 'center',
		horizontalPosition: 'shift',
		textboxWidth: 48,
		textMinLines: 16,
		textMaxLines: 16,
	},
	corner: {
		// An example style, which positions a resizing textbox in the corner opposite the player.
		verticalPosition: 'shift',
		horizontalPosition: 'shift',
		textboxWidth: 64,
		textMinLines: 1,
		textMaxLines: 8,
	},
	inverted: {
		// An example style, which inverts the normal textbox colors
		textboxColor: [255, 255, 255, 255],
		textColor: [0, 0, 0, 255],
		borderColor: [128, 128, 128, 255],
		borderMidColor: [204, 204, 204, 255],
		borderBGColor: [255, 255, 255, 255],
		arrowColor: [0, 0, 0, 255],
		arrowBGColor: [255, 255, 255, 255],
	},
	smallBorder: {
		// An example style, which uses a smaller border with a blue background.
		borderWidth: 4,
		borderHeight: 4,
		textPaddingX: 4,
		textPaddingY: 4,
		borderColor: [255, 255, 255, 255],
		borderBGColor: [51, 153, 204, 255],
		arrowBGColor: [51, 153, 204, 255],
		borderUL: [
			0, 0, 0, 0,
			0, 1, 1, 1,
			0, 1, 1, 0,
			0, 1, 0, 1,
		],
		borderU: [
			0, 0, 0, 0,
			1, 1, 1, 1,
			0, 0, 0, 0,
			0, 0, 0, 0,
		],
		borderUR: [
			0, 0, 0, 0,
			1, 1, 1, 0,
			0, 0, 1, 0,
			0, 1, 1, 0,
		],
		borderL: [
			0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0,
			0, 1, 0, 0,
		],
		borderR: [
			1, 1, 1, 0,
			1, 1, 1, 0,
			1, 1, 1, 0,
			1, 1, 1, 0,
		],
		borderDL: [
			0, 1, 0, 0,
			0, 1, 0, 1,
			0, 1, 1, 1,
			0, 0, 0, 0,
		],
		borderD: [
			1, 1, 1, 1,
			1, 1, 1, 1,
			1, 1, 1, 1,
			0, 0, 0, 0,
		],
		borderDR: [
			0, 1, 1, 0,
			1, 0, 1, 0,
			1, 1, 1, 0,
			0, 0, 0, 0,
		],
		borderM: [
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
			0, 0, 0, 0,
		],
	},
},